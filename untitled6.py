# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MRgWCc6XsNYMNHFOnTHDeqyo5YPLDzEO
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd

# Replace this filename with the exact name of the uploaded file if different
df = pd.read_csv('Attrition.csv')
df.head()

print(df.isnull().sum())

from sklearn.preprocessing import LabelEncoder

le = LabelEncoder()

# Encode the target variable 'Attrition'
df['Attrition'] = le.fit_transform(df['Attrition'])  # Yes = 1, No = 0

# Encode all other categorical columns
categorical_cols = df.select_dtypes(include=['object']).columns

for col in categorical_cols:
    df[col] = le.fit_transform(df[col])

X = df.drop('Attrition', axis=1)
y = df['Attrition']

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42)

from sklearn.ensemble import RandomForestClassifier

model = RandomForestClassifier(random_state=42)
model.fit(X_train, y_train)

# Predictions
y_pred = model.predict(X_test)

from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

print("âœ… Accuracy:", accuracy_score(y_test, y_pred))
print("\nðŸ“„ Classification Report:\n", classification_report(y_test, y_pred))
print("\nðŸ“Š Confusion Matrix:\n", confusion_matrix(y_test, y_pred))

import matplotlib.pyplot as plt
import seaborn as sns

feature_importances = pd.Series(model.feature_importances_, index=X.columns)
top_features = feature_importances.sort_values(ascending=False).head(10)

plt.figure(figsize=(8, 5))
sns.barplot(x=top_features, y=top_features.index)
plt.title('Top 10 Important Features for Attrition Prediction')
plt.xlabel('Importance Score')
plt.show()

accuracy = accuracy_score(y_test, y_pred)
print(f"âœ… Model Accuracy: {accuracy * 100:.2f}%")